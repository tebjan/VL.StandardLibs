shader VertexParticleProvider_ShaderFX : TransformationBase, VertexIDStream, ParticleProvider, VertexParticleStruct, ShaderBaseStream, Transformation, PositionStream4, NormalStream
{
    cbuffer PerMaterial
    {
        stage float ParticleSize = 0.1;
    }

    // Particle buffer for material input
    rgroup PerMaterial
    {
        stage StructuredBuffer<VertexParticle> ParticlesIn;
    }

    stage stream float Size;

    // override the vertex shader methods that handle position 
    stage override void PreTransformPosition()
    {
        AssignVertexID();
        streams.PositionWS = streams.Position;
    }

    override stage float4 GetWorldPosition()
    {
        uint id = streams.VertexID;
        VertexParticle p = ParticlesIn[id];
        // calculate size depending on particle age, fade in and out with smoothstep at 10% of lifetime
        float sizeMultiplierIn = smoothstep(0.0, 0.1, p.Age / p.Lifetime);
        float sizeMultiplierOut = smoothstep(1.0, 0.9, p.Age / p.Lifetime);
        streams.Size = ParticleSize * sizeMultiplierIn * sizeMultiplierOut * 0.1;
        return float4(p.Pos.xyz, 1);
    }

    override stage float GetParticleSize()
    {
        return streams.Size;
    }
};